$date
	Wed Sep 26 13:54:27 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralFullAdder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # carryin $end
$var wire 1 $ sum $end
$var wire 1 % carryout $end
$upscope $end
$scope module testFourBit $end
$var wire 4 & sum [3:0] $end
$var wire 1 ' overflow $end
$var wire 1 ( carryout $end
$var reg 4 ) a [3:0] $end
$var reg 4 * b [3:0] $end
$scope module adder $end
$var wire 4 + a [3:0] $end
$var wire 4 , b [3:0] $end
$var wire 1 ' overflow $end
$var wire 4 - sum [3:0] $end
$var wire 1 ( carryout $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$var wire 1 0 c0 $end
$scope module add0 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 0 carryout $end
$var wire 1 3 out1 $end
$var wire 1 4 sum $end
$upscope $end
$scope module add1 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 0 carryin $end
$var wire 1 / carryout $end
$var wire 1 7 out1 $end
$var wire 1 8 out2 $end
$var wire 1 9 out3 $end
$var wire 1 : sum $end
$upscope $end
$scope module add2 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 / carryin $end
$var wire 1 . carryout $end
$var wire 1 = out1 $end
$var wire 1 > out2 $end
$var wire 1 ? out3 $end
$var wire 1 @ sum $end
$upscope $end
$scope module add3 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 . carryin $end
$var wire 1 ( carryout $end
$var wire 1 C out1 $end
$var wire 1 D out2 $end
$var wire 1 E out3 $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xF
xE
xD
xC
0B
0A
x@
x?
x>
x=
0<
0;
x:
x9
x8
x7
06
05
x4
x3
02
01
x0
x/
x.
bx -
b0 ,
b0 +
b0 *
b0 )
x(
x'
bx &
x%
x$
z#
z"
z!
$end
#50000
03
00
07
09
0=
0?
0C
0E
#100000
04
bx00 &
bx00 -
0:
08
0>
0D
#150000
0/
0.
0(
#200000
0@
b0 &
b0 -
0F
0'
#1000000
12
16
1<
1B
11
15
1;
1A
b1111 *
b1111 ,
b1111 )
b1111 +
#1050000
10
19
1?
1E
#1100000
b10 &
b10 -
1:
1/
1.
1(
#1150000
1@
b1110 &
b1110 -
1F
#2000000
02
06
0<
0B
b0 *
b0 ,
#2050000
13
00
17
09
1=
0?
1C
0E
#2100000
14
0/
0@
1>
0.
b11 &
b11 -
0F
1D
0(
#2150000
1@
0>
1.
b1111 &
b1111 -
1F
0D
1(
#2200000
0.
b111 &
b111 -
0F
1D
0(
#2250000
b1111 &
b1111 -
1F
0D
1(
#2300000
0(
1'
#2350000
0'
#3000000
12
16
1<
1B
01
05
0;
0A
b1111 *
b1111 ,
b0 )
b0 +
#4000000
06
0<
0B
11
15
1;
1A
b1 *
b1 ,
b1111 )
b1111 +
#4050000
03
10
#4100000
04
b1100 &
b1100 -
0:
18
#4150000
1/
#4200000
b1000 &
b1000 -
0@
1>
#4250000
1.
#4300000
b0 &
b0 -
0F
1D
1'
#4350000
1(
#4400000
0'
#5000000
02
16
b10 *
b10 ,
#5050000
13
00
07
19
#5100000
b1 &
b1 -
14
08
#6000000
06
1<
b100 *
b100 ,
#6050000
17
09
0=
1?
#6100000
1:
0/
b111 &
b111 -
1@
0>
#6150000
b11 &
b11 -
0@
#7000000
0<
1B
b1000 *
b1000 ,
#7050000
1=
0?
0C
1E
#7100000
1@
0.
b1111 &
b1111 -
1F
0D
#7150000
b111 &
b111 -
0F
1'
#8000000
12
0B
01
05
0;
b1 *
b1 ,
b1000 )
b1000 +
#8050000
1C
0E
07
0=
#8100000
1F
0(
0:
b1001 &
b1001 -
0@
#8150000
0'
#9000000
16
1<
b111 *
b111 ,
#9050000
17
1=
#9100000
1:
b1111 &
b1111 -
1@
#10000000
06
0<
11
15
1;
b1 *
b1 ,
b1111 )
b1111 +
#10050000
03
10
#10100000
04
b1100 &
b1100 -
0:
18
#10150000
1/
#10200000
b1000 &
b1000 -
0@
1>
#10250000
1.
#10300000
b0 &
b0 -
0F
1D
1'
#10350000
1(
#10400000
0'
#12000000
